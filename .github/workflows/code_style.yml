# This is a basic workflow to help you get started with Actions
name: Check code style

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events
  [ push, pull_request ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "style"
  style:
    # The type of runner that the job will run on
    runs-on: ${{ matrix.os }}

    strategy:
      # You can define a matrix of different job configurations
      matrix:
        os: [ ubuntu-latest, macos-latest, windows-latest ]
        python-version: [ 3.11 ]

    steps:
      #----------------------------------------------
      #       check-out repo and set-up python
      #----------------------------------------------
      - name: Check out repository
        uses: actions/checkout@v3
      - name: Set up python ${{ matrix.python-version }}
        id: setup-python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      #----------------------------------------------
      #  -----  install & configure poetry  -----
      #----------------------------------------------
      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
      #----------------------------------------------
      #       load cached venv if cache exists
      #----------------------------------------------
      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v3
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}
      #----------------------------------------------
      # install dependencies if cache does not exist
      #----------------------------------------------
      - name: Install dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install --no-interaction --no-root
      #----------------------------------------------
      #    add matrix specifics and run pre-commit
      #----------------------------------------------
      # Install pre-commit from .pre-commit-config.yaml
      - name: Install pre-commit
        run: |
          poetry run pre-commit install

      # Run pre-commit on all the files in the repo
      - name: Run pre-commit
        run: |
          poetry run pre-commit run --all-files --color always --verbose --show-diff-on-failure

#   # Steps represent a sequence of tasks that will be executed as part of the job
#    steps:
#      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
#      - name: Set up Git repository
#        uses: actions/checkout@v3
#
#      # Setup Python with version from matrix
#      - name: Set up Python ${{ matrix.python-version }}
#        uses: actions/setup-python@v4
#        with:
#          python-version: ${{ matrix.python-version }}
#
#      # Install requirements
#      - name: Install requirements
#
#        # Runs command-line programs using the operating system's shell
#        run: |
#          python -m pip install --upgrade pip wheel setuptools
#          python -m pip install -r requirements.txt
#          python -m pip list
#
#      # Install pre-commit from .pre-commit-config.yaml
#      - name: Install pre-commit
#        run: |
#          pre-commit install
#
#      # Run pre-commit on all the files in the repo
#      - name: Run pre-commit
#        run: |
#          pre-commit run --all-files --color always --verbose --show-diff-on-failure
